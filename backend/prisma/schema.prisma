generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id
  name        String   @db.VarChar(255)
  username    String   @unique @db.VarChar(30)
  email       String   @unique @db.VarChar(256)
  isAdmin     Boolean  @default(false)
  password    String
  avatar_name String?
  biography   String?
  totalXp     Int      @default(0)
  TotalCoins  Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  UserOnPhases UserOnPhases[]
  UserOnMap    UserOnMap[]
  @@map("users")
}

model Map {
  id          String   @id
  title       String   @db.VarChar(30)
  description String   @db.VarChar(255)
  createdAt   DateTime @default(now())

  phases Phase[]

  UserOnMap UserOnMap[]
  @@map("maps")
}

model Phase {
  id            String   @id
  title         String   @db.VarChar(30)
  type          String   @db.VarChar(255)
  markdown_text String?  @db.Text
  max_level     Int      @default(1)
  createdAt     DateTime @default(now())

  Map   Map?   @relation(fields: [mapId], references: [id])
  mapId String

  UserOnPhases    UserOnPhases[]
  PhaseOnActivity PhaseOnActivity[]
  @@map("phases")
}

model UserOnPhases {
  currentLevel Int      @default(0)
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  phase        Phase    @relation(fields: [phaseId], references: [id])
  phaseId      String
  createdAt    DateTime @default(now())

  @@id([userId, phaseId])
  @@map("user_phase")
}

model UserOnMap {
  isDone    Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  map       Map      @relation(fields: [mapId], references: [id])
  mapId     String
  createdAt DateTime @default(now())

  @@id([userId, mapId])
  @@map("user_map")
}

model Activity {
  id           String   @id
  title        String   @db.VarChar(30)
  type         String   @db.VarChar(255)
  isNeededTest Boolean  @default(false)
  createdAt    DateTime @default(now())

  PhaseOnActivity PhaseOnActivity[]
  Tip             Tip[]
  Option          Option[]
  @@map("activities")
}

model PhaseOnActivity {
  phase      Phase    @relation(fields: [phaseId], references: [id])
  phaseId    String
  activity   Activity @relation(fields: [activityId], references: [id])
  activityId String

  @@id([phaseId, activityId])
  @@map("phase_activity")
}

model Tip {
  id         String   @id
  name       String
  activity   Activity @relation(fields: [activityId], references: [id])
  activityId String
  createdAt  DateTime @default(now())

  @@map("tips")
}

model Option {
  id               String   @id
  name             String
  type             String
  hexadecimalColor String
  activity         Activity @relation(fields: [activityId], references: [id])
  activityId       String
  createdAt        DateTime @default(now())

  @@map("options")
}
